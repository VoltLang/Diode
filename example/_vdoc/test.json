[{"kind":"module",
"name":"diode.parser.writer",
"children":[{"kind":"class",
"name":"Writer",
"children":[{"kind":"var",
"name":"mTokens",
"type":"Token[]",
"typeFull":"diode.token.token.Token[]"},
{"kind":"var",
"name":"mIndex",
"type":"size_t",
"typeFull":"u64"},
{"kind":"ctor",
"args":[{"name":"tokens",
"type":"Token[]",
"typeFull":"diode.token.token.Token[]"}],
"hasBody":true},
{"kind":"member",
"name":"front",
"doc":"**\n\t * Returns the current token.\n\t *\n\t * Side-effects:\n\t *   None.\n\t */",
"rets":[{"type":"Token",
"typeFull":"diode.token.token.Token"}],
"hasBody":true},
{"kind":"member",
"name":"following",
"doc":"**\n\t * Returns the following token.\n\t *\n\t * Side-effects:\n\t *   None.\n\t */",
"rets":[{"type":"Token",
"typeFull":"diode.token.token.Token"}],
"hasBody":true},
{"kind":"member",
"name":"popFront",
"doc":"**\n\t * Advances the stream by one, will clamp to the last token.\n\t *\n\t * Side-effects:\n\t *   Icrements mIndex.\n\t */",
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"lookahead",
"doc":"**\n\t * Returns the token n steps into the stream, will clamp to length.\n\t *\n\t * Side-effects:\n\t *   None.\n\t */",
"args":[{"name":"n",
"type":"size_t",
"typeFull":"u64"}],
"rets":[{"type":"Token",
"typeFull":"diode.token.token.Token"}],
"hasBody":true}]}]},
{"kind":"module",
"name":"diode.parser.parser",
"children":[{"kind":"fn",
"name":"parse",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"ir.File",
"typeFull":"diode.ir.node.File"}],
"hasBody":true},
{"kind":"alias",
"name":"tk",
"type":"TokenKind"},
{"kind":"enum",
"name":"Status",
"children":[{"kind":"enumdecl",
"name":"Ok",
"type":"diode.parser.parser.Status"},
{"kind":"enumdecl",
"name":"Error",
"type":"diode.parser.parser.Status"}]},
{"kind":"class",
"name":"LexerError",
"children":[{"kind":"ctor",
"args":[{"name":"t",
"type":"Token",
"typeFull":"diode.token.token.Token"},
{"name":"msg",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true}]},
{"kind":"class",
"name":"Parser",
"children":[{"kind":"var",
"name":"mErrorToken",
"type":"Token",
"typeFull":"diode.token.token.Token"},
{"kind":"ctor",
"args":[{"name":"tokens",
"type":"Token[]",
"typeFull":"diode.token.token.Token[]"}],
"hasBody":true},
{"kind":"member",
"name":"error",
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"member",
"name":"makeException",
"rets":[{"type":"LexerError",
"typeFull":"diode.parser.parser.LexerError"}],
"hasBody":true}]},
{"kind":"fn",
"name":"parseFile",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"file",
"type":"ir.File",
"typeFull":"diode.ir.node.File"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseNode",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"nodes",
"type":"ir.Node[]",
"typeFull":"diode.ir.node.Node[]"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"match",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"t",
"type":"TokenKind",
"typeFull":"diode.token.token.TokenKind"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"match",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"str",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"matchAndGet",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"str",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"matchAssert",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"t",
"type":"TokenKind",
"typeFull":"diode.token.token.TokenKind"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"parseText",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parsePrint",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseStatement",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseInclude",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseIfUnless",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"elsif",
"type":"bool"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseFor",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseAssign",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"node",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"parseExp",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"},
{"name":"exp",
"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"}],
"rets":[{"type":"Status",
"typeFull":"diode.parser.parser.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"stripAnyHyphen",
"doc":"// Returns true if any hyphen was found.",
"args":[{"name":"p",
"type":"Parser",
"typeFull":"diode.parser.parser.Parser"}],
"rets":[{"type":"bool"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.parser.header",
"children":[{"kind":"class",
"name":"Header",
"children":[{"kind":"var",
"name":"map",
"type":"immutable(char)[][immutable(char)[]]"},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"fn",
"name":"parse",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"Header",
"typeFull":"diode.parser.header.Header"}],
"hasBody":true},
{"kind":"fn",
"name":"isTripleDash",
"doc":"**\n * Does not advance the source, just check if the next 3 chars are dashes.\n */",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"bool"}],
"hasBody":true},
{"kind":"fn",
"name":"skipWhiteAndCheckIfEmptyLine",
"doc":"**\n * Does what it says on the tin, yes I felt bad naming this function.\n */",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"bool"}],
"hasBody":true},
{"kind":"fn",
"name":"skipWhiteTillAfterColon",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"getIdent",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"fn",
"name":"getRestOfLine",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.parser",
"children":[]},
{"kind":"module",
"name":"diode.ir.build",
"children":[{"kind":"fn",
"name":"bFile",
"rets":[{"type":"ir.File",
"typeFull":"diode.ir.node.File"}],
"hasBody":true},
{"kind":"fn",
"name":"bPrint",
"args":[{"name":"e",
"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"}],
"rets":[{"type":"ir.Print",
"typeFull":"diode.ir.node.Print"}],
"hasBody":true},
{"kind":"fn",
"name":"bText",
"args":[{"name":"str",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"ir.Text",
"typeFull":"diode.ir.node.Text"}],
"hasBody":true},
{"kind":"fn",
"name":"bAssign",
"args":[{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"exp",
"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"}],
"rets":[{"type":"ir.Assign",
"typeFull":"diode.ir.node.Assign"}],
"hasBody":true},
{"kind":"fn",
"name":"bInclude",
"args":[{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"assigns",
"type":"ir.Assign[]",
"typeFull":"diode.ir.node.Assign[]"}],
"rets":[{"type":"ir.Include",
"typeFull":"diode.ir.node.Include"}],
"hasBody":true},
{"kind":"fn",
"name":"bFor",
"args":[{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"exp",
"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"},
{"name":"nodes",
"type":"ir.Node[]",
"typeFull":"diode.ir.node.Node[]"}],
"rets":[{"type":"ir.For",
"typeFull":"diode.ir.node.For"}],
"hasBody":true},
{"kind":"fn",
"name":"bIf",
"args":[{"name":"invert",
"type":"bool"},
{"name":"exp",
"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"},
{"name":"nodes",
"type":"ir.Node[]",
"typeFull":"diode.ir.node.Node[]"},
{"name":"elseNodes",
"type":"ir.Node[]",
"typeFull":"diode.ir.node.Node[]"}],
"rets":[{"type":"ir.If",
"typeFull":"diode.ir.node.If"}],
"hasBody":true},
{"kind":"fn",
"name":"bAccess",
"args":[{"name":"exp",
"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"ir.Access",
"typeFull":"diode.ir.node.Access"}],
"hasBody":true},
{"kind":"fn",
"name":"bIdent",
"args":[{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"ir.Ident",
"typeFull":"diode.ir.node.Ident"}],
"hasBody":true},
{"kind":"fn",
"name":"bPrintChain",
"args":[{"name":"start",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"idents",
"type":"string[]",
"typeFull":"immutable(char)[][]"}],
"rets":[{"type":"ir.Print",
"typeFull":"diode.ir.node.Print"}],
"hasBody":true},
{"kind":"fn",
"name":"bChain",
"args":[{"name":"start",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"idents",
"type":"string[]",
"typeFull":"immutable(char)[][]"}],
"rets":[{"type":"ir.Exp",
"typeFull":"diode.ir.node.Exp"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.ir",
"children":[]},
{"kind":"module",
"name":"diode.ir.node",
"children":[{"kind":"class",
"name":"Node",
"doc":"**\n * Base class for all nodes.\n */",
"children":[{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"File",
"doc":"**\n * Top level container node.\n */",
"children":[{"kind":"var",
"name":"nodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Text",
"doc":"**\n * A string of text to be printed out directly.\n */",
"children":[{"kind":"var",
"name":"text",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"ctor",
"args":[{"name":"text",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"Print",
"doc":"**\n * A expression to be evaluated and printed.\n */",
"children":[{"kind":"var",
"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"kind":"ctor",
"args":[{"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"Exp",
"doc":"**\n * Base class for all expressions.\n */",
"children":[{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Ident",
"doc":"**\n * A single identifier to be looked up in the global scope.\n */",
"children":[{"kind":"var",
"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"ctor",
"args":[{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"Access",
"doc":"**\n * Lookup symbol into child expression.\n */",
"children":[{"kind":"var",
"name":"child",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"kind":"var",
"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"ctor",
"args":[{"name":"child",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"If",
"doc":"**\n * If control statement.\n */",
"children":[{"kind":"var",
"name":"thenNodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"},
{"kind":"var",
"name":"elseNodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"},
{"kind":"var",
"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"kind":"var",
"name":"invert",
"type":"bool"},
{"kind":"ctor",
"args":[{"name":"invert",
"type":"bool"},
{"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"name":"thenNodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"},
{"name":"elseNodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"For",
"doc":"**\n * For loop control statement.\n */",
"children":[{"kind":"var",
"name":"var",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"nodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"},
{"kind":"var",
"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"kind":"ctor",
"args":[{"name":"var",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"name":"nodes",
"type":"Node[]",
"typeFull":"diode.ir.node.Node[]"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"Assign",
"children":[{"kind":"var",
"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"},
{"kind":"ctor",
"args":[{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"exp",
"type":"Exp",
"typeFull":"diode.ir.node.Exp"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"Include",
"children":[{"kind":"var",
"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"assigns",
"type":"Assign[]",
"typeFull":"diode.ir.node.Assign[]"},
{"kind":"ctor",
"args":[{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"assigns",
"type":"Assign[]",
"typeFull":"diode.ir.node.Assign[]"}],
"hasBody":true},
{"kind":"member",
"name":"accept",
"args":[{"name":"v",
"type":"Visitor",
"typeFull":"diode.ir.node.Visitor"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"enum",
"name":"Status",
"doc":"**\n * Control the flow of the visitor.\n */",
"children":[{"kind":"enumdecl",
"name":"Stop",
"type":"diode.ir.node.Status"},
{"kind":"enumdecl",
"name":"Continue",
"type":"diode.ir.node.Status"},
{"kind":"enumdecl",
"name":"ContinueParent",
"type":"diode.ir.node.Status"}]},
{"kind":"class",
"name":"Visitor",
"doc":"**\n * Base visitor class.\n */",
"children":[{"kind":"alias",
"name":"Status",
"type":"Status",
"typeFull":"diode.ir.node.Status"},
{"kind":"alias",
"name":"Stop",
"type":"Status.Stop"},
{"kind":"alias",
"name":"Continue",
"type":"Status.Continue"},
{"kind":"alias",
"name":"ContinueParent",
"type":"Status.ContinueParent"},
{"kind":"member",
"name":"enter",
"args":[{"type":"File",
"typeFull":"diode.ir.node.File"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"leave",
"args":[{"type":"File",
"typeFull":"diode.ir.node.File"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"visit",
"args":[{"type":"Text",
"typeFull":"diode.ir.node.Text"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"enter",
"args":[{"type":"Print",
"typeFull":"diode.ir.node.Print"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"leave",
"args":[{"type":"Print",
"typeFull":"diode.ir.node.Print"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"enter",
"args":[{"type":"If",
"typeFull":"diode.ir.node.If"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"leave",
"args":[{"type":"If",
"typeFull":"diode.ir.node.If"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"enter",
"args":[{"type":"For",
"typeFull":"diode.ir.node.For"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"leave",
"args":[{"type":"For",
"typeFull":"diode.ir.node.For"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"enter",
"args":[{"type":"Assign",
"typeFull":"diode.ir.node.Assign"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"leave",
"args":[{"type":"Assign",
"typeFull":"diode.ir.node.Assign"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"visit",
"args":[{"type":"Include",
"typeFull":"diode.ir.node.Include"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"enter",
"args":[{"type":"Access",
"typeFull":"diode.ir.node.Access"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"leave",
"args":[{"type":"Access",
"typeFull":"diode.ir.node.Access"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"member",
"name":"visit",
"args":[{"type":"Ident",
"typeFull":"diode.ir.node.Ident"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":false},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"fn",
"name":"filterParent",
"doc":"**\n * Filter out continue parent and turn that into a continue.\n */",
"args":[{"name":"s",
"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.token.writer",
"children":[{"kind":"class",
"name":"Writer",
"children":[{"kind":"var",
"name":"mTokens",
"type":"Token[]",
"typeFull":"diode.token.token.Token[]"},
{"kind":"member",
"name":"pushToken",
"args":[{"name":"loc",
"type":"const(Location)",
"typeFull":"const(watt.text.source.Location)"},
{"name":"kind",
"type":"TokenKind",
"typeFull":"diode.token.token.TokenKind"},
{"name":"value",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"takeTokens",
"rets":[{"type":"Token[]",
"typeFull":"diode.token.token.Token[]"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]}]},
{"kind":"module",
"name":"diode.token.token",
"children":[{"kind":"class",
"name":"Token",
"doc":"**\n * Holds the kind, the actual string and location within the source file.\n */",
"children":[{"kind":"var",
"name":"loc",
"type":"Location",
"typeFull":"watt.text.source.Location"},
{"kind":"var",
"name":"kind",
"type":"TokenKind",
"typeFull":"diode.token.token.TokenKind"},
{"kind":"var",
"name":"value",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"member",
"name":"opEquals",
"args":[{"name":"kind",
"type":"TokenKind",
"typeFull":"diode.token.token.TokenKind"}],
"rets":[{"type":"bool"}],
"hasBody":true},
{"kind":"member",
"name":"opEquals",
"args":[{"name":"str",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"bool"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"enum",
"name":"TokenKind",
"children":[{"kind":"enumdecl",
"name":"None",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Begin",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"End",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Text",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Hyphen",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"OpenPrint",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"ClosePrint",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"OpenStatement",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"CloseStatement",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Dot",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Pipe",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Comma",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Assign",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Nil",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"True",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"False",
"type":"diode.token.token.TokenKind"},
{"kind":"enumdecl",
"name":"Identifier",
"type":"diode.token.token.TokenKind"}]},
{"kind":"fn",
"name":"identifierKind",
"args":[{"name":"ident",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"TokenKind",
"typeFull":"diode.token.token.TokenKind"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.token",
"children":[]},
{"kind":"module",
"name":"diode.token.lexer",
"children":[{"kind":"fn",
"name":"lex",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"}],
"rets":[{"type":"Token[]",
"typeFull":"diode.token.token.Token[]"}],
"hasBody":true},
{"kind":"enum",
"name":"Status",
"children":[{"kind":"enumdecl",
"name":"Text",
"type":"diode.token.lexer.Status"},
{"kind":"enumdecl",
"name":"Exp",
"type":"diode.token.lexer.Status"},
{"kind":"enumdecl",
"name":"Statement",
"type":"diode.token.lexer.Status"},
{"kind":"enumdecl",
"name":"End",
"type":"diode.token.lexer.Status"},
{"kind":"enumdecl",
"name":"Error",
"type":"diode.token.lexer.Status"}]},
{"kind":"fn",
"name":"lexToken",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"},
{"name":"tw",
"type":"Writer",
"typeFull":"diode.token.writer.Writer"},
{"name":"status",
"type":"Status",
"typeFull":"diode.token.lexer.Status"}],
"rets":[{"type":"Status",
"typeFull":"diode.token.lexer.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"lexIdent",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"},
{"name":"tw",
"type":"Writer",
"typeFull":"diode.token.writer.Writer"},
{"name":"status",
"type":"Status",
"typeFull":"diode.token.lexer.Status"}],
"rets":[{"type":"Status",
"typeFull":"diode.token.lexer.Status"}],
"hasBody":true},
{"kind":"fn",
"name":"lexText",
"args":[{"name":"src",
"type":"Source",
"typeFull":"watt.text.source.Source"},
{"name":"tw",
"type":"Writer",
"typeFull":"diode.token.writer.Writer"}],
"rets":[{"type":"Status",
"typeFull":"diode.token.lexer.Status"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.vdoc",
"children":[{"kind":"enum",
"name":"Kind",
"doc":"**\n * Type of doc object.\n */",
"children":[{"kind":"enumdecl",
"name":"Invalid",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Arg",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Enum",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"EnumDecl",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Alias",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Class",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Union",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Return",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Struct",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Module",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Member",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Function",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Variable",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Destructor",
"type":"diode.vdoc.Kind"},
{"kind":"enumdecl",
"name":"Constructor",
"type":"diode.vdoc.Kind"}]},
{"kind":"class",
"name":"Base",
"doc":"**\n * Base class for all doc objects.\n */",
"children":[{"kind":"var",
"name":"kind",
"type":"Kind",
"typeFull":"diode.vdoc.Kind"},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Named",
"doc":"**\n * Base class for all doc objects that can have names.\n */",
"children":[{"kind":"var",
"name":"name",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"raw",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Parent",
"doc":"**\n * Base class for things with children, like Module, Class, Structs.\n */",
"children":[{"kind":"var",
"name":"children",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Arg",
"doc":"**\n * Argument to a function.\n */",
"children":[{"kind":"var",
"name":"name",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"type",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"typeFull",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Return",
"doc":"**\n * Return from a function.\n */",
"children":[{"kind":"var",
"name":"type",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"typeFull",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Variable",
"doc":"**\n * A variable or field on a aggregate.\n */",
"children":[{"kind":"var",
"name":"type",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"typeFull",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Function",
"doc":"**\n * A function or constructor, destructor or method on a aggreegate.\n */",
"children":[{"kind":"var",
"name":"args",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"var",
"name":"rets",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"var",
"name":"linkage",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"hasBody",
"type":"bool"},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Collection",
"doc":"**\n * A special array that you can access fields on to filter the members.\n */",
"children":[{"kind":"ctor",
"args":[{"name":"vals",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"}],
"hasBody":true},
{"kind":"fn",
"name":"make",
"args":[{"name":"vals",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true}]},
{"kind":"fn",
"name":"makeNilOrText",
"doc":"**\n * Create a text Value, nil if string is empty.\n */",
"args":[{"name":"text",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"fn",
"name":"makeNilOrArray",
"doc":"**\n * Create a array Value, nil if string is empty.\n */",
"args":[{"name":"array",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"struct",
"name":"Info",
"doc":"**\n * Used to collect information during parsing.\n */",
"children":[{"kind":"var",
"name":"kind",
"type":"Kind",
"typeFull":"diode.vdoc.Kind"},
{"kind":"var",
"name":"name",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"doc",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"type",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"typeFull",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"hasBody",
"type":"bool"},
{"kind":"var",
"name":"linkage",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"value",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"children",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"var",
"name":"rets",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"var",
"name":"args",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"member",
"name":"getFields",
"args":[{"name":"e",
"type":"json.Value",
"typeFull":"watt.text.json.dom.Value"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"copyToBase",
"args":[{"name":"b",
"type":"Base",
"typeFull":"diode.vdoc.Base"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"copyToNamed",
"args":[{"name":"b",
"type":"Named",
"typeFull":"diode.vdoc.Named"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"copyToParent",
"args":[{"name":"b",
"type":"Parent",
"typeFull":"diode.vdoc.Parent"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"toParent",
"rets":[{"type":"Parent",
"typeFull":"diode.vdoc.Parent"}],
"hasBody":true},
{"kind":"member",
"name":"toNamed",
"rets":[{"type":"Named",
"typeFull":"diode.vdoc.Named"}],
"hasBody":true},
{"kind":"member",
"name":"toArg",
"rets":[{"type":"Arg",
"typeFull":"diode.vdoc.Arg"}],
"hasBody":true},
{"kind":"member",
"name":"toReturn",
"rets":[{"type":"Return",
"typeFull":"diode.vdoc.Return"}],
"hasBody":true},
{"kind":"member",
"name":"toVariable",
"rets":[{"type":"Variable",
"typeFull":"diode.vdoc.Variable"}],
"hasBody":true},
{"kind":"member",
"name":"toFunction",
"rets":[{"type":"Function",
"typeFull":"diode.vdoc.Function"}],
"hasBody":true}]},
{"kind":"fn",
"name":"fromArray",
"args":[{"name":"arr",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"name":"v",
"type":"json.Value",
"typeFull":"watt.text.json.dom.Value"},
{"name":"defKind",
"type":"Kind",
"typeFull":"diode.vdoc.Kind"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"getKindFromString",
"args":[{"name":"str",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Kind",
"typeFull":"diode.vdoc.Kind"}],
"hasBody":true},
{"kind":"fn",
"name":"parse",
"args":[{"name":"data",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.interfaces",
"children":[{"kind":"class",
"name":"Driver",
"doc":"**\n * Main class driving everything.\n */",
"children":[{"kind":"var",
"name":"settings",
"type":"Settings",
"typeFull":"diode.interfaces.Settings"},
{"kind":"ctor",
"args":[{"name":"settings",
"type":"Settings",
"typeFull":"diode.interfaces.Settings"}],
"hasBody":true},
{"kind":"member",
"name":"addLayout",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":false},
{"kind":"member",
"name":"addInclude",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":false},
{"kind":"member",
"name":"addDoc",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":false},
{"kind":"member",
"name":"renderFile",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":false},
{"kind":"member",
"name":"info",
"args":[{"name":"fmt",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":false}]},
{"kind":"class",
"name":"Settings",
"doc":"**\n * Holds settings for Diode.\n */",
"children":[{"kind":"var",
"name":"sourceDir",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"vdocDir",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"outputDir",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"layoutDir",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"includeDir",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"url",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"enumdecl",
"name":"vdocDirDefault",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"enumdecl",
"name":"outputDirDefault",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"enumdecl",
"name":"layoutDirDefault",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"enumdecl",
"name":"includeDirDefault",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"member",
"name":"fillInDefaults",
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"processPath",
"args":[{"name":"val",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"def",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]}]},
{"kind":"module",
"name":"diode.driver",
"children":[{"kind":"class",
"name":"DiodeDriver",
"doc":"**\n * Main focal point of Diode.\n */",
"children":[{"kind":"var",
"name":"mLayouts",
"type":"File[immutable(char)[]]",
"typeFull":"diode.driver.File[immutable(char)[]]"},
{"kind":"var",
"name":"mRoot",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"var",
"name":"mSite",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"var",
"name":"mDoc",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"var",
"name":"mModules",
"type":"Array",
"typeFull":"diode.eval.value.Array"},
{"kind":"var",
"name":"mEngine",
"type":"DriverEngine",
"typeFull":"diode.driver.DriverEngine"},
{"kind":"ctor",
"args":[{"name":"settings",
"type":"Settings",
"typeFull":"diode.interfaces.Settings"}],
"hasBody":true},
{"kind":"member",
"name":"addLayout",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"addInclude",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"renderFile",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"member",
"name":"addDoc",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"info",
"args":[{"name":"fmt",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"createFile",
"args":[{"name":"source",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"File",
"typeFull":"diode.driver.File"}],
"hasBody":true},
{"kind":"member",
"name":"getLayoutForFile",
"args":[{"name":"f",
"type":"File",
"typeFull":"diode.driver.File"}],
"rets":[{"type":"File",
"typeFull":"diode.driver.File"}],
"hasBody":true},
{"kind":"member",
"name":"selectType",
"args":[{"name":"layout",
"type":"File",
"typeFull":"diode.driver.File"},
{"name":"contents",
"type":"File",
"typeFull":"diode.driver.File"}],
"rets":[{"type":"Contents",
"typeFull":"diode.driver.Contents"}],
"hasBody":true},
{"kind":"member",
"name":"getAndCheckExt",
"args":[{"name":"base",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"File.Ext",
"typeFull":"diode.driver.File.Ext"}],
"hasBody":true},
{"kind":"member",
"name":"getLayout",
"args":[{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"File",
"typeFull":"diode.driver.File"}],
"hasBody":true},
{"kind":"member",
"name":"buildRootEnv",
"rets":[{"type":"void"}],
"hasBody":true}]},
{"kind":"class",
"name":"DriverEngine",
"doc":"**\n *\n */",
"children":[{"kind":"var",
"name":"mDrv",
"type":"DiodeDriver",
"typeFull":"diode.driver.DiodeDriver"},
{"kind":"var",
"name":"mRoot",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"var",
"name":"mIncludes",
"type":"File[immutable(char)[]]",
"typeFull":"diode.driver.File[immutable(char)[]]"},
{"kind":"ctor",
"args":[{"name":"d",
"type":"DiodeDriver",
"typeFull":"diode.driver.DiodeDriver"},
{"name":"root",
"type":"Set",
"typeFull":"diode.eval.value.Set"}],
"hasBody":true},
{"kind":"member",
"name":"addInclude",
"args":[{"name":"f",
"type":"File",
"typeFull":"diode.driver.File"},
{"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"renderFile",
"args":[{"name":"f",
"type":"File",
"typeFull":"diode.driver.File"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"visit",
"args":[{"name":"p",
"type":"ir.Include",
"typeFull":"diode.ir.node.Include"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]},
{"kind":"class",
"name":"File",
"doc":"**\n * A file to be rendered. Used for includes and layouts as well.\n */",
"children":[{"kind":"enum",
"name":"Ext",
"children":[{"kind":"enumdecl",
"name":"HTML",
"type":"diode.driver.File.Ext"},
{"kind":"enumdecl",
"name":"Markdown",
"type":"diode.driver.File.Ext"}]},
{"kind":"var",
"name":"filename",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"layout",
"type":"File",
"typeFull":"diode.driver.File"},
{"kind":"var",
"name":"header",
"type":"Header",
"typeFull":"diode.parser.header.Header"},
{"kind":"var",
"name":"file",
"type":"ir.File",
"typeFull":"diode.ir.node.File"},
{"kind":"var",
"name":"ext",
"type":"Ext",
"typeFull":"diode.driver.File.Ext"},
{"kind":"member",
"name":"getOption",
"args":[{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"def",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Contents",
"doc":"**\n * Special Value for the contents value.\n */",
"children":[{"kind":"var",
"name":"engine",
"type":"Engine",
"typeFull":"diode.eval.engine.Engine"},
{"kind":"var",
"name":"file",
"type":"ir.File",
"typeFull":"diode.ir.node.File"},
{"kind":"var",
"name":"env",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"member",
"name":"toText",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"MarkdownContents",
"doc":"**\n * Special Value for Markdown to HTML contents.\n */",
"children":[{"kind":"member",
"name":"toText",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]}]},
{"kind":"module",
"name":"diode.license",
"children":[{"kind":"enumdecl",
"name":"license",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"var",
"name":"licenseArray",
"type":"string[]",
"typeFull":"immutable(char)[][]"},
{"kind":"fn",
"name":"__ctor",
"rets":[{"type":"void"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.errors",
"children":[{"kind":"class",
"name":"DiodeException",
"children":[{"kind":"ctor",
"args":[{"name":"msg",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true}]},
{"kind":"fn",
"name":"makeNoExtension",
"args":[{"name":"file",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"DiodeException",
"typeFull":"diode.errors.DiodeException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeExtensionNotSupported",
"args":[{"name":"file",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"DiodeException",
"typeFull":"diode.errors.DiodeException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeLayoutNotFound",
"args":[{"name":"file",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"layout",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"DiodeException",
"typeFull":"diode.errors.DiodeException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeConversionNotSupported",
"args":[{"name":"layout",
"type":"string",
"typeFull":"immutable(char)[]"},
{"name":"contents",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"DiodeException",
"typeFull":"diode.errors.DiodeException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeBadHeader",
"args":[{"name":"loc",
"type":"Location",
"typeFull":"watt.text.source.Location"}],
"rets":[{"type":"DiodeException",
"typeFull":"diode.errors.DiodeException"}],
"hasBody":true},
{"kind":"class",
"name":"EvalException",
"children":[{"kind":"var",
"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"kind":"ctor",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"msg",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true}]},
{"kind":"fn",
"name":"makeNoField",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"EvalException",
"typeFull":"diode.errors.EvalException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeNotSet",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"EvalException",
"typeFull":"diode.errors.EvalException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeNotText",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"EvalException",
"typeFull":"diode.errors.EvalException"}],
"hasBody":true},
{"kind":"fn",
"name":"makeNotArray",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"EvalException",
"typeFull":"diode.errors.EvalException"}],
"hasBody":true}]},
{"kind":"module",
"name":"diode.eval.value",
"children":[{"kind":"alias",
"name":"Sink",
"type":"ir.Sink"},
{"kind":"class",
"name":"Value",
"children":[{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true},
{"kind":"member",
"name":"toText",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"toArray",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"}],
"hasBody":true},
{"kind":"member",
"name":"toBool",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"bool"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Nil",
"children":[{"kind":"member",
"name":"toBool",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"bool"}],
"hasBody":true},
{"kind":"ctor",
"hasBody":true}]},
{"kind":"class",
"name":"Bool",
"children":[{"kind":"var",
"name":"value",
"type":"bool"},
{"kind":"ctor",
"args":[{"name":"value",
"type":"bool"}],
"hasBody":true},
{"kind":"member",
"name":"toText",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"member",
"name":"toBool",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"bool"}],
"hasBody":true}]},
{"kind":"class",
"name":"Text",
"children":[{"kind":"var",
"name":"text",
"type":"string",
"typeFull":"immutable(char)[]"},
{"kind":"ctor",
"args":[{"name":"text",
"type":"string",
"typeFull":"immutable(char)[]"}],
"hasBody":true},
{"kind":"member",
"name":"toText",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"void"}],
"hasBody":true}]},
{"kind":"class",
"name":"Array",
"children":[{"kind":"var",
"name":"vals",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"},
{"kind":"ctor",
"args":[{"name":"vals",
"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"}],
"hasBody":true},
{"kind":"member",
"name":"toArray",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"}],
"rets":[{"type":"Value[]",
"typeFull":"diode.eval.value.Value[]"}],
"hasBody":true}]},
{"kind":"class",
"name":"Set",
"children":[{"kind":"var",
"name":"parent",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"var",
"name":"ctx",
"type":"Value[immutable(char)[]]",
"typeFull":"diode.eval.value.Value[immutable(char)[]]"},
{"kind":"ctor",
"hasBody":true},
{"kind":"ctor",
"args":[{"name":"parent",
"type":"Set",
"typeFull":"diode.eval.value.Set"}],
"hasBody":true},
{"kind":"member",
"name":"ident",
"args":[{"name":"n",
"type":"ir.Node",
"typeFull":"diode.ir.node.Node"},
{"name":"key",
"type":"string",
"typeFull":"immutable(char)[]"}],
"rets":[{"type":"Value",
"typeFull":"diode.eval.value.Value"}],
"hasBody":true}]}]},
{"kind":"module",
"name":"diode.eval",
"children":[]},
{"kind":"module",
"name":"diode.eval.engine",
"children":[{"kind":"class",
"name":"Engine",
"children":[{"kind":"var",
"name":"env",
"type":"Set",
"typeFull":"diode.eval.value.Set"},
{"kind":"var",
"name":"v",
"type":"Value",
"typeFull":"diode.eval.value.Value"},
{"kind":"ctor",
"args":[{"name":"env",
"type":"Set",
"typeFull":"diode.eval.value.Set"}],
"hasBody":true},
{"kind":"member",
"name":"visit",
"args":[{"name":"t",
"type":"ir.Text",
"typeFull":"diode.ir.node.Text"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"leave",
"args":[{"name":"p",
"type":"ir.Print",
"typeFull":"diode.ir.node.Print"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"enter",
"args":[{"name":"i",
"type":"ir.If",
"typeFull":"diode.ir.node.If"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"enter",
"args":[{"name":"f",
"type":"ir.For",
"typeFull":"diode.ir.node.For"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"leave",
"args":[{"name":"a",
"type":"ir.Assign",
"typeFull":"diode.ir.node.Assign"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"leave",
"args":[{"name":"p",
"type":"ir.Access",
"typeFull":"diode.ir.node.Access"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"visit",
"args":[{"name":"p",
"type":"ir.Ident",
"typeFull":"diode.ir.node.Ident"},
{"name":"sink",
"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"enter",
"args":[{"type":"ir.Assign",
"typeFull":"diode.ir.node.Assign"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"enter",
"args":[{"type":"ir.File",
"typeFull":"diode.ir.node.File"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"leave",
"args":[{"type":"ir.File",
"typeFull":"diode.ir.node.File"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"enter",
"args":[{"type":"ir.Access",
"typeFull":"diode.ir.node.Access"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"enter",
"args":[{"type":"ir.Print",
"typeFull":"diode.ir.node.Print"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"leave",
"args":[{"type":"ir.If",
"typeFull":"diode.ir.node.If"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"leave",
"args":[{"type":"ir.For",
"typeFull":"diode.ir.node.For"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true},
{"kind":"member",
"name":"visit",
"args":[{"type":"ir.Include",
"typeFull":"diode.ir.node.Include"},
{"type":"scope (Sink)",
"typeFull":"scope (void delegate(scope (const(char)[])))"}],
"rets":[{"type":"Status",
"typeFull":"diode.ir.node.Status"}],
"hasBody":true}]}]},
{"kind":"module",
"name":"main",
"doc":"**\n * Holds the main function and some small test code.\n */",
"children":[{"kind":"fn",
"name":"main",
"args":[{"name":"args",
"type":"string[]",
"typeFull":"immutable(char)[][]"}],
"rets":[{"type":"i32"}],
"hasBody":true},
{"kind":"fn",
"name":"test",
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"renderFiles",
"args":[{"name":"d",
"type":"Driver",
"typeFull":"diode.interfaces.Driver"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"addLayouts",
"args":[{"name":"d",
"type":"Driver",
"typeFull":"diode.interfaces.Driver"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"addIncludes",
"args":[{"name":"d",
"type":"Driver",
"typeFull":"diode.interfaces.Driver"}],
"rets":[{"type":"void"}],
"hasBody":true},
{"kind":"fn",
"name":"addVdocs",
"args":[{"name":"d",
"type":"Driver",
"typeFull":"diode.interfaces.Driver"}],
"rets":[{"type":"void"}],
"hasBody":true}]}]